# https://help.github.com/en/articles/metadata-syntax-for-github-actions

name: 'luminsports-php-cs-fixer'
author: 'luminsports'
description: 'Use PHP-CS-Fixer via Github Action.'
inputs:
  php-cs-fixer-version:
    description: 'Which php-cs-fixer release to download.'
    required: false
    default: 'v3.17.0'
  create-annotations:
    description: 'Whether to create annotations based on checkstyle results.'
    required: false
    default: 'true'
  annotation-name:
    description: 'Name for the check run to create. Default: PHP-CS-Fixer.'
    required: false
    default: 'PHP-CS-Fixer'
  annotation-title:
    description: 'Title for the check run to create. Default: PHP-CS-Fixer Results.'
    required: false
    default: 'PHP-CS-Fixer Results'
  create-pull-request:
    description: 'Whether to create a pull request to fix php-cs-fixer issues.'
    required: false
    default: 'true'
  commit-message:
    description: 'The message to use when committing code style fixes.'
    required: false
    default: 'style(php-cs-fixer): Fix code-style'
  pull-request-title:
    description: 'The title of the pull request.'
    required: false
    default: 'Apply fixes from PHP CS Fixer (${{ github.ref_name }})'
  pull-request-assignees:
    description: 'A comma or newline separated list of assignees (GitHub usernames).'
    required: false
    default: ${{ github.actor }}
  pull-request-body:
    description: 'The title of the pull request.'
    required: false
    default: |
      This pull request applies code style fixes from an analysis carried out by [PHP CS Fixer](https://github.com/FriendsOfPHP/PHP-CS-Fixer).

      ---

      For more information, click [here](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
  pull-request-reviewers:
    description: 'A comma or newline separated list of reviewers (GitHub usernames) to request a review from.'
    required: false
    default: ''
  pull-request-team-reviewers:
    description: |
      A comma or newline separated list of GitHub teams to request a review from.
      Note that a `repo` scoped Personal Access Token (PAT) may be required.
    required: false
    default: ''
  pull-request-branch:
    description: 'The pull request branch name.'
    required: false
    default: 'php-cs-fixer/${{ github.ref_name }}'
  pull-request-labels:
    description: 'A comma or newline separated list of labels.'
    required: false
    default: 'php-cs-fixer'
  use-built-in-rules:
    description: 'Whether to use built-in rules from luminsports/php-cs-fixer-rules repo.'
    required: false
    default: 'true'
  only-check-modified-files:
    description: 'Whether to limit checks to files that have been modified in the current push/PR.'
    required: false
    default: 'false'
  rules-version:
    description: 'Version of rules to use from luminsports/php-cs-fixer-rules repo.'
    required: false
    default: 'latest'
outputs:
  checkstyle-result:
    description: 'Checkstyle report generate by php-cs-fixer'
    value: ${{ steps.php-cs-fixer.outputs.checkstyle-result }}
  pull-request-number:
    description: 'The pull request number'
    value: ${{ steps.pull-request.outputs.pull-request-number }}
  pull-request-url:
    description: 'The URL of the pull request.'
    value: ${{ steps.pull-request.outputs.pull-request-url }}
  pull-request-operation:
    description: 'The pull request operation performed by the action, `created`, `updated` or `closed`.'
    value: ${{ steps.pull-request.outputs.pull-request-operation }}
  pull-request-head-sha:
    description: 'The commit SHA of the pull request branch.'
    value: ${{ steps.pull-request.outputs.pull-request-head-sha }}
runs:
  using: 'composite'
  steps:
    - name: Setup
      shell: bash
      run: |
        curl --fail -L https://github.com/FriendsOfPHP/PHP-CS-Fixer/releases/download/${{ inputs.php-cs-fixer-version }}/php-cs-fixer.phar -o php-cs-fixer
        chmod a+x php-cs-fixer

    - name: Download PHP CS Fixer rules
      if: inputs.use-built-in-rules == 'true' && inputs.rules-version != 'latest'
      shell: bash
      run: curl --fail -L https://github.com/luminsports/php-cs-fixer-rules/releases/download/${{ inputs.rules-version }}/rules.php -o .php-cs-fixer.dist.php

    - name: Download Latest PHP CS Fixer rules
      if: inputs.use-built-in-rules == 'true' && inputs.rules-version == 'latest'
      shell: bash
      run: curl --fail -L https://github.com/luminsports/php-cs-fixer-rules/releases/latest/download/rules.php -o .php-cs-fixer.dist.php

    - name: Get specific changed files
      if: inputs.only-check-modified-files == 'true'
      id: changed-php-files
      uses: tj-actions/changed-files@v36
      with:
        files: |
          **.php

    - name: Run PHP CS Fixer
      if: steps.changed-php-files.outputs.any_changed == 'true'
      id: php-cs-fixer-only-modified
      shell: bash
      run: |
        ./php-cs-fixer fix --format=checkstyle --path-mode=intersection -- "${{ steps.changed-php-files.outputs.all_changed_files }}" > ./checkstyle-result.xml
        echo 'checkstyle-result<<EOF' >> $GITHUB_OUTPUT
        cat ./checkstyle-result.xml >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT

    - name: Run PHP CS Fixer
      if: inputs.only-check-modified-files != 'true'
      id: php-cs-fixer
      shell: bash
      run: |
        ./php-cs-fixer fix --format=checkstyle > ./checkstyle-result.xml
        echo 'checkstyle-result<<EOF' >> $GITHUB_OUTPUT
        cat ./checkstyle-result.xml >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT

    - name: Annotate
      if: inputs.create-annotations == 'true'
      shell: bash
      run: |
        curl --fail -L https://github.com/staabm/annotate-pull-request-from-checkstyle/releases/latest/download/cs2pr -o cs2pr
        chmod a+x ./cs2pr
        ./cs2pr ./checkstyle-result.xml

    - name: Cleanup
      if: failure()
      shell: bash
      run: rm -rf ./php-cs-fixer ./cs2pr ./checkstyle-result.xml ./.php-cs-fixer.cache

    - name: Cleanup
      id: author
      if: inputs.create-pull-request == 'true' && failure()
      shell: bash
      run: echo "author=$(git log -1 --pretty="%an <%ae>")" >> "$GITHUB_OUTPUT"

    - name: Create Pull Request
      id: pull-request
      if: inputs.create-pull-request == 'true' && failure()
      uses: peter-evans/create-pull-request@v6
      with:
        commit-message: ${{ inputs.commit-message }}
        title: ${{ inputs.pull-request-title }}
        delete-branch: true
        assignees: ${{ inputs.pull-request-assignees }}
        author: ${{ steps.author.outputs.author || format('{0} <{1}+{0}@users.noreply.github.com>', github.actor, github.actor_id) }}
        branch: ${{ inputs.pull-request-branch }}
        labels: ${{ inputs.pull-request-labels }}
        reviewers: ${{ inputs.pull-request-reviewers }}
        team-reviewers: ${{ inputs.pull-request-team-reviewers }}
        body: ${{ inputs.pull-request-body }}

branding:
  icon: 'check'
  color: 'blue'
